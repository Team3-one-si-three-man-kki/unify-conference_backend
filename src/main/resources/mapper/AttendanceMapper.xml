<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.unicon.attendance.dao.AttendanceDAO">

<select id="selectListAttendanceByTenant"
            parameterType="com.example.unicon.attendance.vo.AttendanceVO"
            resultType="com.example.unicon.attendance.vo.AttendanceVO">
        SELECT
        a.record_id as recordId,
        a.session_id as sessionId,
        a.name,
        a.email,
        a.ip_address as ipAddress,
        DATE_FORMAT(a.join_time, '%Y-%m-%d %H:%i:%s') as joinTime,
        DATE_FORMAT(a.leave_time, '%Y-%m-%d %H:%i:%s') as leaveTime,
        /* 참여시간 계산 - 실제 컬럼 대신 계산된 값 사용 */
        CASE
        WHEN a.leave_time IS NOT NULL THEN
        TIMESTAMPDIFF(MINUTE, a.join_time, a.leave_time)
        ELSE
        TIMESTAMPDIFF(MINUTE, a.join_time, NOW())
        END as participationMinutes,
        /* 상태 계산 */
        CASE
        WHEN a.leave_time IS NULL THEN '참여중'
        ELSE '퇴장완료'
        END as status,
        /* 세션 정보 추가 */
        s.name as sessionName,
        <!-- s.using_dept as sessionDept, -->
        DATE_FORMAT(s.start_time, '%Y-%m-%d %H:%i:%s') as sessionStartTime,
        s.invite_link as sessionInviteLink,
        DATE_FORMAT(s.link_expiry, '%Y-%m-%d %H:%i:%s') as sessionLinkExpiry
        FROM attendance_record a
        LEFT JOIN session s ON a.session_id = s.session_id
        WHERE s.tenant_id = #{scTenantId}
        <if test="scSessionId != null and scSessionId != ''">
            AND a.session_id = #{scSessionId}
        </if>
        <if test="scName != null and scName != ''">
            AND a.name LIKE CONCAT('%', #{scName}, '%')
        </if>
        <if test="scEmail != null and scEmail != ''">
            AND a.email LIKE CONCAT('%', #{scEmail}, '%')
        </if>
        <if test="scJoinTime != null and scJoinTime != ''">
            AND DATE(a.join_time) = #{scJoinTime}
        </if>
        ORDER BY a.join_time
        <choose>
            <when test="sortOrder != null and sortOrder == 'ASC'">ASC</when>
            <otherwise>DESC</otherwise>
        </choose>
        <if test="pageSize != null and pageSize > 0">
            LIMIT #{startRow}, #{pageSize}
        </if>
    </select>

    <!-- 테넌트별 출석 목록 전체 카운트 -->
    <select id="selectListCountAttendanceByTenant"
            parameterType="com.example.unicon.attendance.vo.AttendanceVO"
            resultType="long">
        SELECT COUNT(*)
        FROM attendance_record ar
        INNER JOIN session s ON ar.session_id = s.session_id
        WHERE s.tenant_id = #{scTenantId}
        <if test="scSessionId != null and scSessionId != ''">
            AND ar.session_id = #{scSessionId}
        </if>
        <if test="scName != null and scName != ''">
            AND ar.name LIKE CONCAT('%', #{scName}, '%')
        </if>
        <if test="scEmail != null and scEmail != ''">
            AND ar.email LIKE CONCAT('%', #{scEmail}, '%')
        </if>
        <if test="scJoinTime != null and scJoinTime != ''">
            AND DATE(ar.join_time) = #{scJoinTime}
        </if>
    </select>

    <!-- 테넌트별 CSV 다운로드용 출석 목록 조회 -->
    <select id="selectAttendanceForCSVByTenant"
            parameterType="com.example.unicon.attendance.vo.AttendanceVO"
            resultType="com.example.unicon.attendance.vo.AttendanceVO">
        SELECT
        ar.record_id as recordId,
        ar.session_id as sessionId,
        s.name as sessionName,
        <!--s.using_dept as sessionDept,-->
        DATE_FORMAT(s.start_time, '%Y-%m-%d %H:%i:%s') as sessionStartTime,
        ar.name,
        ar.email,
        COALESCE(ar.ip_address, '') as ipAddress,
        DATE_FORMAT(ar.join_time, '%Y-%m-%d %H:%i:%s') as joinTime,
        CASE
        WHEN ar.leave_time IS NOT NULL THEN
        DATE_FORMAT(ar.leave_time, '%Y-%m-%d %H:%i:%s')
        ELSE '진행중'
        END as leaveTime,
        CASE
        WHEN ar.leave_time IS NOT NULL THEN
        TIMESTAMPDIFF(MINUTE, ar.join_time, ar.leave_time)
        ELSE
        TIMESTAMPDIFF(MINUTE, ar.join_time, NOW())
        END as participationMinutes,
        CASE
        WHEN ar.leave_time IS NULL THEN '참여중'
        ELSE '퇴장완료'
        END as status
        FROM attendance_record ar
        INNER JOIN session s ON ar.session_id = s.session_id
        WHERE s.tenant_id = #{scTenantId}
        <if test="scSessionId != null and scSessionId != ''">
            AND ar.session_id = #{scSessionId}
        </if>
        <if test="scName != null and scName != ''">
            AND ar.name LIKE CONCAT('%', #{scName}, '%')
        </if>
        <if test="scEmail != null and scEmail != ''">
            AND ar.email LIKE CONCAT('%', #{scEmail}, '%')
        </if>
        <if test="scJoinTime != null and scJoinTime != ''">
            AND DATE(ar.join_time) = #{scJoinTime}
        </if>
        ORDER BY ar.join_time DESC
    </select>

    <!-- 테넌트별 출석 통계 조회 -->
    <select id="selectAttendanceStatsByTenant"
            parameterType="com.example.unicon.attendance.vo.AttendanceVO"
            resultType="com.example.unicon.attendance.vo.AttendanceVO">
        SELECT
        COUNT(*) as totalCount,
        SUM(CASE WHEN ar.leave_time IS NULL THEN 1 ELSE 0 END) as activeCount,
        SUM(CASE WHEN ar.leave_time IS NOT NULL THEN 1 ELSE 0 END) as leftCount,
        COALESCE(AVG(
        CASE
        WHEN ar.leave_time IS NOT NULL THEN
        TIMESTAMPDIFF(MINUTE, ar.join_time, ar.leave_time)
        ELSE
        TIMESTAMPDIFF(MINUTE, ar.join_time, NOW())
        END
        ), 0) as avgMinutes
        FROM attendance_record ar
        INNER JOIN session s ON ar.session_id = s.session_id
        WHERE s.tenant_id = #{scTenantId}
        <if test="scSessionId != null and scSessionId != ''">
            AND ar.session_id = #{scSessionId}
        </if>
        <if test="scName != null and scName != ''">
            AND ar.name LIKE CONCAT('%', #{scName}, '%')
        </if>
        <if test="scEmail != null and scEmail != ''">
            AND ar.email LIKE CONCAT('%', #{scEmail}, '%')
        </if>
        <if test="scJoinTime != null and scJoinTime != ''">
            AND DATE(ar.join_time) = #{scJoinTime}
        </if>
    </select>

    <!-- 일반 출석모듈 목록조회 (테넌트 필터 없음) -->
    <select id="selectListAttendance"
            parameterType="com.example.unicon.attendance.vo.AttendanceVO"
            resultType="com.example.unicon.attendance.vo.AttendanceVO">
        SELECT
        ar.record_id as recordId,
        ar.session_id as sessionId,
        ar.name,
        ar.email,
        COALESCE(ar.ip_address, '') as ipAddress,
        DATE_FORMAT(ar.join_time, '%Y-%m-%d %H:%i:%s') as joinTime,
        CASE
        WHEN ar.leave_time IS NOT NULL THEN
        DATE_FORMAT(ar.leave_time, '%Y-%m-%d %H:%i:%s')
        ELSE '진행중'
        END as leaveTime,
        CASE
        WHEN ar.leave_time IS NOT NULL THEN
        TIMESTAMPDIFF(MINUTE, ar.join_time, ar.leave_time)
        ELSE
        TIMESTAMPDIFF(MINUTE, ar.join_time, NOW())
        END as participationMinutes,
        CASE
        WHEN ar.leave_time IS NULL THEN '참여중'
        ELSE '퇴장완료'
        END as status,
        s.name as sessionName,
        s.using_dept as sessionDept,
        DATE_FORMAT(s.start_time, '%Y-%m-%d %H:%i:%s') as sessionStartTime,
        s.invite_link as sessionInviteLink,
        DATE_FORMAT(s.link_expiry, '%Y-%m-%d %H:%i:%s') as sessionLinkExpiry
        FROM attendance_record ar
        LEFT JOIN session s ON ar.session_id = s.session_id
        <where>
            <if test="scSessionId != null and scSessionId != ''">
                AND ar.session_id = #{scSessionId}
            </if>
            <if test="scName != null and scName != ''">
                AND ar.name LIKE CONCAT('%', #{scName}, '%')
            </if>
            <if test="scEmail != null and scEmail != ''">
                AND ar.email LIKE CONCAT('%', #{scEmail}, '%')
            </if>
            <if test="scJoinTime != null and scJoinTime != ''">
                AND DATE(ar.join_time) = #{scJoinTime}
            </if>
        </where>
        ORDER BY ar.join_time
        <choose>
            <when test="sortOrder != null and sortOrder == 'ASC'">ASC</when>
            <otherwise>DESC</otherwise>
        </choose>
        <if test="pageSize != null and pageSize > 0">
            LIMIT #{startRow}, #{pageSize}
        </if>
    </select>

    <!-- 일반 출석 목록 카운트 -->
    <select id="selectListCountAttendance"
            parameterType="com.example.unicon.attendance.vo.AttendanceVO"
            resultType="long">
        SELECT COUNT(*)
        FROM attendance_record ar
        <where>
            <if test="scSessionId != null and scSessionId != ''">
                AND ar.session_id = #{scSessionId}
            </if>
            <if test="scName != null and scName != ''">
                AND ar.name LIKE CONCAT('%', #{scName}, '%')
            </if>
            <if test="scEmail != null and scEmail != ''">
                AND ar.email LIKE CONCAT('%', #{scEmail}, '%')
            </if>
            <if test="scJoinTime != null and scJoinTime != ''">
                AND DATE(ar.join_time) = #{scJoinTime}
            </if>
        </where>
    </select>

    <!-- 출석 상세 조회 -->
    <select id="selectAttendance"
            parameterType="com.example.unicon.attendance.vo.AttendanceVO"
            resultType="com.example.unicon.attendance.vo.AttendanceVO">
        SELECT
        record_id as recordId,
        session_id as sessionId,
        name,
        email,
        ip_address as ipAddress,
        DATE_FORMAT(join_time, '%Y-%m-%d %H:%i:%s') as joinTime,
        DATE_FORMAT(leave_time, '%Y-%m-%d %H:%i:%s') as leaveTime
        FROM attendance_record
        WHERE record_id = #{recordId}
    </select>

    <!-- CSV 다운로드용 조회 -->
    <select id="selectAttendanceForCSV"
            parameterType="com.example.unicon.attendance.vo.AttendanceVO"
            resultType="com.example.unicon.attendance.vo.AttendanceVO">
        SELECT
        ar.record_id as recordId,
        ar.session_id as sessionId,
        ar.name,
        ar.email,
        COALESCE(ar.ip_address, '') as ipAddress,
        DATE_FORMAT(ar.join_time, '%Y-%m-%d %H:%i:%s') as joinTime,
        CASE
        WHEN ar.leave_time IS NOT NULL THEN
        DATE_FORMAT(ar.leave_time, '%Y-%m-%d %H:%i:%s')
        ELSE '진행중'
        END as leaveTime,
        CASE
        WHEN ar.leave_time IS NOT NULL THEN
        TIMESTAMPDIFF(MINUTE, ar.join_time, ar.leave_time)
        ELSE
        TIMESTAMPDIFF(MINUTE, ar.join_time, NOW())
        END as participationMinutes,
        CASE
        WHEN ar.leave_time IS NULL THEN '참여중'
        ELSE '퇴장완료'
        END as status,
        s.name as sessionName
        FROM attendance_record ar
        LEFT JOIN session s ON ar.session_id = s.session_id
        <where>
            <if test="scSessionId != null and scSessionId != ''">
                AND ar.session_id = #{scSessionId}
            </if>
            <if test="scName != null and scName != ''">
                AND ar.name LIKE CONCAT('%', #{scName}, '%')
            </if>
            <if test="scEmail != null and scEmail != ''">
                AND ar.email LIKE CONCAT('%', #{scEmail}, '%')
            </if>
            <if test="scJoinTime != null and scJoinTime != ''">
                AND DATE(ar.join_time) = #{scJoinTime}
            </if>
        </where>
        ORDER BY ar.join_time
        <choose>
            <when test="sortOrder != null and sortOrder == 'ASC'">ASC</when>
            <otherwise>DESC</otherwise>
        </choose>
    </select>

    <!-- 출석 통계 조회 -->
    <select id="selectAttendanceStats"
            parameterType="com.example.unicon.attendance.vo.AttendanceVO"
            resultType="com.example.unicon.attendance.vo.AttendanceVO">
        SELECT
        COUNT(*) as totalCount,
        SUM(CASE WHEN leave_time IS NULL THEN 1 ELSE 0 END) as activeCount,
        SUM(CASE WHEN leave_time IS NOT NULL THEN 1 ELSE 0 END) as leftCount,
        COALESCE(AVG(
        CASE
        WHEN leave_time IS NOT NULL THEN
        TIMESTAMPDIFF(MINUTE, join_time, leave_time)
        ELSE
        TIMESTAMPDIFF(MINUTE, join_time, NOW())
        END
        ), 0) as avgMinutes
        FROM attendance_record
        <where>
            <if test="scSessionId != null and scSessionId != ''">
                AND session_id = #{scSessionId}
            </if>
        </where>
    </select>

    <!-- ===================================================================================== -->
    <!-- ================================ 쓰기 (CUD) 쿼리 ===================================== -->
    <!-- ===================================================================================== -->

    <insert id="insertAttendance" parameterType="com.example.unicon.attendance.vo.AttendanceVO">
        INSERT INTO attendance_record (
        record_id,
        session_id,
        name,
        email,
        ip_address,
        join_time,
        leave_time
        ) VALUES (
        #{recordId},
        #{sessionId},
        #{name},
        #{email},
        #{ipAddress},
        #{joinTime},
        #{leaveTime}
        )
    </insert>

    <update id="updateAttendance" parameterType="com.example.unicon.attendance.vo.AttendanceVO">
        UPDATE attendance_record
        SET
        session_id = #{sessionId},
        name = #{name},
        email = #{email},
        ip_address = #{ipAddress},
        join_time = #{joinTime},
        leave_time = #{leaveTime}
        WHERE record_id = #{recordId}
    </update>

    <delete id="deleteAttendance" parameterType="com.example.unicon.attendance.vo.AttendanceVO">
        DELETE FROM attendance_record
        WHERE record_id = #{recordId}
    </delete>

    <!-- 활성 참여자 수 조회 -->
    <select id="selectActiveParticipantCount"
            parameterType="com.example.unicon.attendance.vo.AttendanceVO"
            resultType="int">
        SELECT COUNT(*)
        FROM attendance_record
        WHERE session_id = #{sessionId}
        AND leave_time IS NULL
    </select>

    <!-- 평균 참여시간 조회 -->
    <select id="selectAvgParticipationTime"
            parameterType="com.example.unicon.attendance.vo.AttendanceVO"
            resultType="double">
        SELECT AVG(TIMESTAMPDIFF(MINUTE, join_time, COALESCE(leave_time, NOW())))
        FROM attendance_record
        WHERE session_id = #{sessionId}
    </select>

    <!-- 중복 참여자 체크 -->
    <select id="checkDuplicateParticipant"
            parameterType="com.example.unicon.attendance.vo.AttendanceVO"
            resultType="int">
        SELECT COUNT(*)
        FROM attendance_record
        WHERE session_id = #{sessionId}
        AND email = #{email}
        <if test="recordId != null and recordId != ''">
            AND record_id != #{recordId}
        </if>
    </select>

    <!-- 기간별 출석 데이터 조회 -->
    <select id="selectAttendanceByDateRange"
            parameterType="com.example.unicon.attendance.vo.AttendanceVO"
            resultType="com.example.unicon.attendance.vo.AttendanceVO">
        SELECT
        record_id as recordId,
        session_id as sessionId,
        name,
        email,
        ip_address as ipAddress,
        DATE_FORMAT(join_time, '%Y-%m-%d %H:%i:%s') as joinTime,
        DATE_FORMAT(leave_time, '%Y-%m-%d %H:%i:%s') as leaveTime
        FROM attendance_record
        WHERE join_time BETWEEN #{startDate} AND #{endDate}
        ORDER BY join_time DESC
    </select>
</mapper>